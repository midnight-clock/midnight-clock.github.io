{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","sources","useState","play","setPlay","rain","localStorage","getItem","piano","volume","setVolume","useEventListener","e","includes","String","keyCode","_onPlay","status","map","each","audio","document","getElementById","pause","style","display","flexDirection","alignItems","justifyContent","marginTop","padding","border","fontWeight","className","fontSize","color","onClick","type","width","min","max","value","onChange","val","target","copy","Object","assign","setItem","defaultValue","id","loop","src","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.51565adb.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport { useCookies } from 'react-cookie'\nimport useEventListener from '@use-it/event-listener'\nimport './App.css'\nimport Footer from './Footer.js'\n\nconst App = () => {\n  const sources = ['rain', 'piano']\n  const [play, setPlay] = useState('pause')\n  const [volume, setVolume] = useState({\n    rain: localStorage.getItem('rain_volume') || 10,\n    piano: localStorage.getItem('piano_volume') || 0,\n  })\n\n  const keydownHandler = (e) => {\n    if (['32'].includes(String(e.keyCode))) {\n      _onPlay()\n    }\n  }\n\n  useEventListener('keydown', keydownHandler)\n\n  const _onPlay = () => {\n    const status = play\n    if (status === 'pause') {\n      setPlay('play')\n    } else {\n      setPlay('pause')\n    }\n\n    sources.map((each) => {\n      let audio = document.getElementById(each)\n      if (!audio) return\n      if (status === 'pause') {\n        if (audio.volume > 0) {\n          audio.play()\n        }\n      } else {\n        audio.pause()\n      }\n    })\n\n  }\n\n  const _onRainVolumeChange = (e) => {\n    if (!e) return\n    const val = e.target.value\n\n    if (val !== volume.rain) {\n      let copy = Object.assign({}, volume)\n      copy.rain = val\n      setVolume(copy)\n\n      const audio = document.getElementById('rain')\n      if (audio) {\n        audio.volume = val / 20\n        localStorage.setItem('rain_volume', val)\n        if (play === 'play') {\n          audio.play()\n        }\n      }\n    }\n  }\n\n  const _onPianoVolumeChange = (e) => {\n    if (!e) return\n    const val = e.target.value\n\n    if (val !== volume.piano) {\n      let copy = Object.assign({}, volume)\n      copy.piano = val\n      setVolume(copy)\n\n      const audio = document.getElementById('piano')\n      if (audio) {\n        audio.volume = val / 20\n        localStorage.setItem('piano_volume', val)\n        if (play === 'play') {\n          audio.play()\n        }\n      }\n    }\n  }\n\n  return (\n    <div>\n      <div style={{display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center'}}>\n\n        <div style={{marginTop: '10px', display: 'flex', alignItems: 'center'}}>\n          <div style={{padding: '3px 8px', border: '3px solid #4a4a4a', fontWeight: 'bold'}}>\n            静夜思\n          </div>\n        </div>\n\n        <div className={`${play === 'pause' ? '' : 'rotate'}`} style={{display: 'flex', alignItems: 'center', justifyContent: 'center', marginTop: '20px', padding: '10px'}}>\n          <i className={`iconfont ${play === 'pause' ? 'icon-bofang' : 'icon-pause'}`} style={{fontSize: '42px', color: '#b4b4b4'}} onClick={_onPlay}></i>\n        </div>\n\n        <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center', marginTop: '20px'}}>\n          <i className=\"iconfont icon-rain\" style={{fontSize: '16px', color: '#b4b4b4', padding: '6px'}}></i>\n          <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center'}}><input className=\"slider\" type=\"range\" style={{width: '100px'}} min=\"0\" max=\"20\" value={volume.rain} onChange={_onRainVolumeChange} /></div>\n        </div>\n\n        <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center', marginTop: '20px'}}>\n          <i className=\"iconfont icon-piano2\" style={{fontSize: '16px', color: '#b4b4b4', padding: '6px'}}></i>\n          <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center'}}><input className=\"slider\" type=\"range\" style={{width: '100px'}} min=\"0\" max=\"20\" value={volume.piano} onChange={_onPianoVolumeChange} /></div>\n        </div>\n\n        <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center', marginTop: '20px'}}>\n          <i className=\"iconfont icon-feng\" style={{fontSize: '16px', color: '#b4b4b4', padding: '6px'}}></i>\n          <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center'}}><input className=\"slider\" type=\"range\" style={{width: '100px'}} min=\"0\" max=\"20\" defaultValue={0} /></div>\n        </div>\n\n        <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center', marginTop: '20px'}}>\n          <i className=\"iconfont icon-flash\" style={{fontSize: '16px', color: '#b4b4b4', padding: '6px'}}></i>\n          <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center'}}><input className=\"slider\" type=\"range\" style={{width: '100px'}} min=\"0\" max=\"20\" defaultValue={0} /></div>\n        </div>\n\n        <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center', marginTop: '20px'}}>\n          <i className=\"iconfont icon-niao\" style={{fontSize: '16px', color: '#b4b4b4', padding: '6px'}}></i>\n          <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center'}}><input className=\"slider\" type=\"range\" style={{width: '100px'}} min=\"0\" max=\"20\" defaultValue={0} /></div>\n        </div>\n\n        <div className=\"content has-text-centered\" style={{marginTop: '40px'}}>\n          <p>\n            God of love ❤\n          </p>\n        </div>\n\n        <audio id=\"rain\" loop={true}>\n          <source src={process.env.PUBLIC_URL + '/rainymood.mp4'} type=\"audio/mpeg\" />\n        </audio>\n        <audio id=\"piano\" loop={true}>\n          <source src={process.env.PUBLIC_URL + '/piano.mp3'} type=\"audio/mpeg\" />\n        </audio>\n\n      </div>\n    </div>\n  )\n\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}